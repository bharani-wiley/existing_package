*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZQTCV_APPR_MTRX.................................*
FORM GET_DATA_ZQTCV_APPR_MTRX.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZQTC_APPRVL_MTRX WHERE
(VIM_WHERETAB) .
    CLEAR ZQTCV_APPR_MTRX .
ZQTCV_APPR_MTRX-MANDT =
ZQTC_APPRVL_MTRX-MANDT .
ZQTCV_APPR_MTRX-VKORG =
ZQTC_APPRVL_MTRX-VKORG .
ZQTCV_APPR_MTRX-VTWEG =
ZQTC_APPRVL_MTRX-VTWEG .
ZQTCV_APPR_MTRX-SPART =
ZQTC_APPRVL_MTRX-SPART .
ZQTCV_APPR_MTRX-AUART =
ZQTC_APPRVL_MTRX-AUART .
ZQTCV_APPR_MTRX-LIFSK =
ZQTC_APPRVL_MTRX-LIFSK .
ZQTCV_APPR_MTRX-FAKSK =
ZQTC_APPRVL_MTRX-FAKSK .
ZQTCV_APPR_MTRX-FIRST_APP_OTYPE =
ZQTC_APPRVL_MTRX-FIRST_APP_OTYPE .
ZQTCV_APPR_MTRX-FIRST_APP_OBJID =
ZQTC_APPRVL_MTRX-FIRST_APP_OBJID .
ZQTCV_APPR_MTRX-SECOND_APP_OTYPE =
ZQTC_APPRVL_MTRX-SECOND_APP_OTYPE .
ZQTCV_APPR_MTRX-SECOND_APP_OBJID =
ZQTC_APPRVL_MTRX-SECOND_APP_OBJID .
ZQTCV_APPR_MTRX-SCR_APP_OTYPE =
ZQTC_APPRVL_MTRX-SCR_APP_OTYPE .
ZQTCV_APPR_MTRX-SCR_APP_OBJID =
ZQTC_APPRVL_MTRX-SCR_APP_OBJID .
ZQTCV_APPR_MTRX-AENAM =
ZQTC_APPRVL_MTRX-AENAM .
ZQTCV_APPR_MTRX-AEDAT =
ZQTC_APPRVL_MTRX-AEDAT .
ZQTCV_APPR_MTRX-AEZET =
ZQTC_APPRVL_MTRX-AEZET .
<VIM_TOTAL_STRUC> = ZQTCV_APPR_MTRX.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZQTCV_APPR_MTRX .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZQTCV_APPR_MTRX.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZQTCV_APPR_MTRX-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZQTC_APPRVL_MTRX WHERE
  VKORG = ZQTCV_APPR_MTRX-VKORG AND
  VTWEG = ZQTCV_APPR_MTRX-VTWEG AND
  SPART = ZQTCV_APPR_MTRX-SPART AND
  AUART = ZQTCV_APPR_MTRX-AUART AND
  LIFSK = ZQTCV_APPR_MTRX-LIFSK AND
  FAKSK = ZQTCV_APPR_MTRX-FAKSK .
    IF SY-SUBRC = 0.
    DELETE ZQTC_APPRVL_MTRX .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZQTC_APPRVL_MTRX WHERE
  VKORG = ZQTCV_APPR_MTRX-VKORG AND
  VTWEG = ZQTCV_APPR_MTRX-VTWEG AND
  SPART = ZQTCV_APPR_MTRX-SPART AND
  AUART = ZQTCV_APPR_MTRX-AUART AND
  LIFSK = ZQTCV_APPR_MTRX-LIFSK AND
  FAKSK = ZQTCV_APPR_MTRX-FAKSK .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZQTC_APPRVL_MTRX.
    ENDIF.
ZQTC_APPRVL_MTRX-MANDT =
ZQTCV_APPR_MTRX-MANDT .
ZQTC_APPRVL_MTRX-VKORG =
ZQTCV_APPR_MTRX-VKORG .
ZQTC_APPRVL_MTRX-VTWEG =
ZQTCV_APPR_MTRX-VTWEG .
ZQTC_APPRVL_MTRX-SPART =
ZQTCV_APPR_MTRX-SPART .
ZQTC_APPRVL_MTRX-AUART =
ZQTCV_APPR_MTRX-AUART .
ZQTC_APPRVL_MTRX-LIFSK =
ZQTCV_APPR_MTRX-LIFSK .
ZQTC_APPRVL_MTRX-FAKSK =
ZQTCV_APPR_MTRX-FAKSK .
ZQTC_APPRVL_MTRX-FIRST_APP_OTYPE =
ZQTCV_APPR_MTRX-FIRST_APP_OTYPE .
ZQTC_APPRVL_MTRX-FIRST_APP_OBJID =
ZQTCV_APPR_MTRX-FIRST_APP_OBJID .
ZQTC_APPRVL_MTRX-SECOND_APP_OTYPE =
ZQTCV_APPR_MTRX-SECOND_APP_OTYPE .
ZQTC_APPRVL_MTRX-SECOND_APP_OBJID =
ZQTCV_APPR_MTRX-SECOND_APP_OBJID .
ZQTC_APPRVL_MTRX-SCR_APP_OTYPE =
ZQTCV_APPR_MTRX-SCR_APP_OTYPE .
ZQTC_APPRVL_MTRX-SCR_APP_OBJID =
ZQTCV_APPR_MTRX-SCR_APP_OBJID .
ZQTC_APPRVL_MTRX-AENAM =
ZQTCV_APPR_MTRX-AENAM .
ZQTC_APPRVL_MTRX-AEDAT =
ZQTCV_APPR_MTRX-AEDAT .
ZQTC_APPRVL_MTRX-AEZET =
ZQTCV_APPR_MTRX-AEZET .
    IF SY-SUBRC = 0.
    UPDATE ZQTC_APPRVL_MTRX .
    ELSE.
    INSERT ZQTC_APPRVL_MTRX .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZQTCV_APPR_MTRX-UPD_FLAG,
STATUS_ZQTCV_APPR_MTRX-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZQTCV_APPR_MTRX.
  SELECT SINGLE * FROM ZQTC_APPRVL_MTRX WHERE
VKORG = ZQTCV_APPR_MTRX-VKORG AND
VTWEG = ZQTCV_APPR_MTRX-VTWEG AND
SPART = ZQTCV_APPR_MTRX-SPART AND
AUART = ZQTCV_APPR_MTRX-AUART AND
LIFSK = ZQTCV_APPR_MTRX-LIFSK AND
FAKSK = ZQTCV_APPR_MTRX-FAKSK .
ZQTCV_APPR_MTRX-MANDT =
ZQTC_APPRVL_MTRX-MANDT .
ZQTCV_APPR_MTRX-VKORG =
ZQTC_APPRVL_MTRX-VKORG .
ZQTCV_APPR_MTRX-VTWEG =
ZQTC_APPRVL_MTRX-VTWEG .
ZQTCV_APPR_MTRX-SPART =
ZQTC_APPRVL_MTRX-SPART .
ZQTCV_APPR_MTRX-AUART =
ZQTC_APPRVL_MTRX-AUART .
ZQTCV_APPR_MTRX-LIFSK =
ZQTC_APPRVL_MTRX-LIFSK .
ZQTCV_APPR_MTRX-FAKSK =
ZQTC_APPRVL_MTRX-FAKSK .
ZQTCV_APPR_MTRX-FIRST_APP_OTYPE =
ZQTC_APPRVL_MTRX-FIRST_APP_OTYPE .
ZQTCV_APPR_MTRX-FIRST_APP_OBJID =
ZQTC_APPRVL_MTRX-FIRST_APP_OBJID .
ZQTCV_APPR_MTRX-SECOND_APP_OTYPE =
ZQTC_APPRVL_MTRX-SECOND_APP_OTYPE .
ZQTCV_APPR_MTRX-SECOND_APP_OBJID =
ZQTC_APPRVL_MTRX-SECOND_APP_OBJID .
ZQTCV_APPR_MTRX-SCR_APP_OTYPE =
ZQTC_APPRVL_MTRX-SCR_APP_OTYPE .
ZQTCV_APPR_MTRX-SCR_APP_OBJID =
ZQTC_APPRVL_MTRX-SCR_APP_OBJID .
ZQTCV_APPR_MTRX-AENAM =
ZQTC_APPRVL_MTRX-AENAM .
ZQTCV_APPR_MTRX-AEDAT =
ZQTC_APPRVL_MTRX-AEDAT .
ZQTCV_APPR_MTRX-AEZET =
ZQTC_APPRVL_MTRX-AEZET .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZQTCV_APPR_MTRX USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZQTCV_APPR_MTRX-VKORG TO
ZQTC_APPRVL_MTRX-VKORG .
MOVE ZQTCV_APPR_MTRX-VTWEG TO
ZQTC_APPRVL_MTRX-VTWEG .
MOVE ZQTCV_APPR_MTRX-SPART TO
ZQTC_APPRVL_MTRX-SPART .
MOVE ZQTCV_APPR_MTRX-AUART TO
ZQTC_APPRVL_MTRX-AUART .
MOVE ZQTCV_APPR_MTRX-LIFSK TO
ZQTC_APPRVL_MTRX-LIFSK .
MOVE ZQTCV_APPR_MTRX-FAKSK TO
ZQTC_APPRVL_MTRX-FAKSK .
MOVE ZQTCV_APPR_MTRX-MANDT TO
ZQTC_APPRVL_MTRX-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZQTC_APPRVL_MTRX'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZQTC_APPRVL_MTRX TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZQTC_APPRVL_MTRX'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
